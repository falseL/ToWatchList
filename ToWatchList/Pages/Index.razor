@page "/"
@using ToWatchList.Data
@using ToWatchList.Interfaces
@using Newtonsoft.Json
@inject TMDBService TMDBService
@inject IDatabaseStorage DatabaseStorage

<PageTitle>Home</PageTitle>

<h1>Home</h1>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search for a movie, tv show" @bind="searchText" @bind:after="Search" />
    <button class="btn btn-outline-secondary" type="button" @onclick="Search">Search</button>
</div>


<div class="row row-cols-1 row-cols-md-1 row-cols-lg-2 g-4">
    @foreach (var item in MediaItems)
    {
        <MediaCard ShowDelete=false IsDisabled=false MediaItem="@item" ItemButtonAction="SaveItemToList"></MediaCard>
    }
</div>

<div class="p-4 g-4" hidden="@(MediaItems.Count!=0)">
    <div class="alert alert-secondary" role="alert">
        @if(searchText.Length == 0)
        {
            @:Enter Query
        }
        else
        {
            @:No result, try a different query
        }
    </div>
</div>


@code {
    private string searchText = "";

    public List<MediaItem> MediaItems { get; set; } = new List<MediaItem>();
    
    public async Task Search()
    {
        if (searchText.Length >= 3)
        {
            // Dependency injected from Program.cs
            var result = await TMDBService.SearchMulti(searchText);
            MediaItems = result.Results.ToList();
        }
    }

    public async Task SaveItemToList(MediaItem media)
    {
        string mediaJson = JsonConvert.SerializeObject(media);
        // Dependency injected from Program.cs
        await DatabaseStorage.AddToListAsync(mediaJson);
    }
}
